# Generated by Django 4.2.2 on 2025-04-03 14:40

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('service', models.CharField(blank=True, max_length=50, null=True)),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_read', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Contact Message',
                'verbose_name_plural': 'Contact Messages',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Electrician',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('photo', models.ImageField(blank=True, help_text='Upload a photo of the electrician.', null=True, upload_to='electricians/')),
                ('bio', models.TextField(blank=True, help_text='Short biography or description.')),
                ('specialization', models.CharField(blank=True, help_text='e.g., Residential Wiring, Industrial Maintenance', max_length=100)),
                ('display_order', models.PositiveIntegerField(default=0, help_text='Order in which electricians appear (lower numbers first).')),
                ('is_active', models.BooleanField(default=True, help_text='Show this electrician on the site?')),
            ],
            options={
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(help_text='URL-friendly version of the name (auto-generated if left blank).', max_length=110, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Product Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(help_text='Brief description of the service.')),
                ('icon_name', models.CharField(blank=True, help_text="Lucide icon name (e.g., 'wrench'). Optional.", max_length=50)),
                ('display_order', models.PositiveIntegerField(default=0, help_text='Order in which services appear (lower numbers first).')),
            ],
            options={
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, help_text='Price in NPR. Leave blank if not applicable.', max_digits=10, null=True)),
                ('image', models.ImageField(blank=True, help_text='Upload a product image.', null=True, upload_to='products/')),
                ('is_featured', models.BooleanField(default=False, help_text='Feature this product on the homepage?')),
                ('feature_order', models.PositiveIntegerField(default=0, help_text='Order for featured products (lower numbers first).')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='shop.productcategory')),
            ],
            options={
                'ordering': ['-is_featured', 'feature_order', 'name'],
            },
        ),
    ]
